apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//图片压缩插件配置,后文有对配置信息介绍
apply plugin: 'img-compressor'
imgCompressOpt{
    way="pngquant"
    test = false
    whiteFiles=["text_pic1.png","test_pic2.jpg"]
    minSize=5
    tinyKeys=["your key"]
}

ext {
    SUPPORT_LIBRARY_VERSION = '27.1.1'
}

def javaVersion = JavaVersion.VERSION_1_8

//android{}是Android插件提供的一个扩展类型，可以让我们自定义Android Gradle工程，是Android Gradle工程配置的唯一入口。
android {
    compileSdkVersion 30        //是编译所依赖的Android SDK的版本，这里是API Level。
    buildToolsVersion '28.0.3'  //是构建该Android工程所用构建工具的版本。

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    //默认的配置，它是一个ProductFlavor。ProductFlavor允许我们根据不同的情况同时生成多个不同的apk包。
    defaultConfig {
        applicationId "com.xht.androidnote"
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        //multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {

    }

    productFlavors {

    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.0.0'
    //noinspection GradleCompatible
    implementation 'com.google.android.material:material:1.0.0'

    //implementation 'com.android.support:multidex:1.0.1'

    //butterknife
    implementation 'com.jakewharton:butterknife:10.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //implementation 'com.squareup.retrofit2:adapter-rxjava2:2.0.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.12"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'


    // 图片加载Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // 权限
    //implementation 'com.github.tbruyelle:rxpermissions:0.10.2'


    //注解
    //implementation project(':annotations')
    //annotationProcessor project(':annotations_processor')

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    //test buildSrc 统筹管理依赖版本
    //implementation Libs.retrofit
}
repositories {
    mavenCentral()
}


/*
task A {
    println 'this is task A'
    doFirst {
        println 'this is in execute'
    }
}

task B {
    dependsOn 'A'
    println 'this is task B'
    doFirst {
        println 'task B is executing'
    }
}

def getDate() {
    def sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.CHINA)
    def nowDateStr = "\"" + sdf.format(new Date()) + "\""
    return nowDateStr
}

task my_task {
    doFirst {
        println 'today is ' + getDate()
    }
}*/

afterEvaluate {
    project ->
        println "app module ---> $project.name"
}

gradle.getTaskGraph().whenReady {
    println "whenReady Task依赖关系构建完成，size=${it.allTasks.size()}"
    it.allTasks.forEach { task ->
        println "${task.name}"
    }
}

//gradle.getTaskGraph().addTaskExecutionGraphListener(new TaskExecutionGraphListener() {
//    @Override
//    void graphPopulated(TaskExecutionGraph graph) {
//        println "graphPopulated Task依赖关系构建完成 size=${graph.allTasks.size()}"
//        graph.allTasks.forEach { task ->
//            println "${task.name}"
//        }
//    }
//})
